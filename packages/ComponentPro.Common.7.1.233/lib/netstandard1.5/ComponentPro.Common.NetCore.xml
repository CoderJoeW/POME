<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentPro.Common.NetCore</name>
    </assembly>
    <members>
        <member name="T:ComponentPro.AsyncEventArgs">
            <summary>
            Represents an asynchronous EventArgs that has members to determine whether it's raised by an asynchronous operation and get the user-defined object.
            </summary>
        </member>
        <member name="P:ComponentPro.AsyncEventArgs.AsyncCall">
            <summary>
            Gets a boolean value indicating whether the event is raised in an asynchronous call.
            </summary>
        </member>
        <member name="P:ComponentPro.AsyncEventArgs.UserState">
            <summary>
            Gets the user-token specified in an asynchronous call.
            </summary>
        </member>
        <member name="T:ComponentPro.ExtendedAsyncCompletedEventHandler`1">
            <summary>
            Represents the method that will handle the asynchronous method completion events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1"/> that contains event data.</param>
            <typeparam name="TResult">The type of the result produced by an asynchronous operation.</typeparam>
            <remarks>
            In .NET 4.5 and higher it's recommended to use <c>async</c> and <c>await</c> modifiers for asynchronous operations.
            </remarks>
        </member>
        <member name="T:ComponentPro.ExtendedAsyncCompletedEventArgs`1">
            <summary>
            Provides data for the asynchronous method completion events.
            </summary>
            <typeparam name="TResult">The type of the result produced by an asynchronous operation.</typeparam>
            <remarks>
            In .NET 4.5 and higher it's recommended to use <c>async</c> and <c>await</c> modifiers for asynchronous operations.
            </remarks>
        </member>
        <member name="P:ComponentPro.ExtendedAsyncCompletedEventArgs`1.Result">
            <summary>
            Gets the asynchronous operation result.
            </summary>
        </member>
        <member name="T:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus">
            <summary>
            License check status.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="F:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus.InvalidKey">
            <summary>
            Invalid license key.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus.InvalidDate">
            <summary>
            Expiry date is invalid.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus.LicenseExpired">
            <summary>
            License is expired.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus.InvalidVersion">
            <summary>
            The used license key is for an older version.
            </summary>
        </member>
        <member name="T:ComponentPro.Licensing.Common.UltimateLicenseException">
            <summary>Represents the License Exception.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Common.UltimateLicenseException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Common.UltimateLicenseException"></see> class with the specified error message.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
        </member>
        <member name="M:ComponentPro.Licensing.Common.UltimateLicenseException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Common.UltimateLicenseException"></see> class with the specified error message and inner exception.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception. </param>
        </member>
        <member name="P:ComponentPro.Licensing.Common.UltimateLicenseException.Status">
            <summary>Gets the error code.</summary>
            <returns>An <see cref="T:ComponentPro.Licensing.Common.UltimateLicenseExceptionStatus"></see> value that indicates the error that occurred.</returns>
        </member>
        <member name="T:ComponentPro.Licensing.Common.LicenseManager">
            <summary>
            ComponentPro License Manager.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Common.LicenseManager.SetLicenseKey(System.String)">
            <summary>
            Sets the license key.
            </summary>
            <param name="licenseKey">The license key string.</param>
        </member>
        <member name="P:ComponentPro.Licensing.Common.LicenseManager.RemainingDays">
            <summary>
            Gets the remaining days untill the expiry date.
            </summary>
            <remarks>
            If the license key is a trial, the software library throws a license exception after that date.
            For production license, this property just shows the remaning days until the subscription expiry date. 
            The software still works after the subscription expiry date.
            </remarks>
        </member>
        <member name="T:ComponentPro.OptionValue">
            <summary>
            Represents the three-state value.
            </summary>
        </member>
        <member name="F:ComponentPro.OptionValue.Auto">
            <summary>
            Auto-detect value.
            </summary>
        </member>
        <member name="F:ComponentPro.OptionValue.Yes">
            <summary>
            Yes value.
            </summary>
        </member>
        <member name="F:ComponentPro.OptionValue.No">
            <summary>
            No value.
            </summary>
        </member>
        <member name="T:ComponentPro.Diagnostics.TraceEventType">
            <summary>
            Identifies the type of event that has caused the trace.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.None">
            <summary>
            No log entries.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Critical">
            <summary>
            Fatal error or application crash.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Error">
            <summary>
            Recoverable error.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Warning">
            <summary>
            Noncritical problem.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Information">
            <summary>
            Informational message.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Debug">
            <summary>
            Debugging trace - all messages useful for debugging purposes.
            </summary>
        </member>
        <member name="F:ComponentPro.Diagnostics.TraceEventType.Verbose">
            <summary>
            Debugging trace and data transfer - log everything.
            </summary>
        </member>
        <member name="T:ComponentPro.Diagnostics.ITraceSource">
            <summary>
            Defines a generalized trace source.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.ITraceSource.TraceSource">
            <summary>
            Gets or sets the source object for all log messages generated by this object. If not set, the property returns the current object.
            </summary>
            <remarks>
            It is handy to set this property to a different object other than this object in some situation where all log messages should come from a single source.
            For example, in a build system, uploading files is just a child task of a main one, by assigning this property to the main task, 
            you can categorize all messages that come from the main task.
            </remarks>
        </member>
        <member name="P:ComponentPro.Diagnostics.ITraceSource.TraceListenerManager">
            <summary>
            Gets or sets the <see cref="P:ComponentPro.Diagnostics.ITraceSource.TraceListenerManager"/> object to which the log messages generated by this object are sent. 
            If not set, the <see cref="F:ComponentPro.Diagnostics.XTrace.Default"/> trace listener manager is used. If this property is set to null, all messages from this object wont be logged.
            </summary>
        </member>
        <member name="T:ComponentPro.Diagnostics.TraceSourceFilter">
            <summary>
            Represents the simple trace source filter.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.TraceSourceFilter.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="source">The source object to compare when a log message is received.</param>
            <param name="ignore">True to ignore log messages comming from the <paramref name="source">specified source</paramref>; otherwise false.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.TraceSourceFilter.Matches(System.Object)">
            <summary>
            Returns true if the input source object is the one that we want to log messages; otherwise false.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="T:ComponentPro.Diagnostics.XTrace">
            <summary>Provides a set of methods and properties that help Ultimate Components and you trace the execution of code.</summary>    
        </member>
        <member name="F:ComponentPro.Diagnostics.XTrace.Default">
            <summary>
            The default <see cref="T:ComponentPro.Diagnostics.XTrace"/> that for all classes that implement the <see cref="T:ComponentPro.Diagnostics.ITraceSource"/> interface.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.#ctor">
            <summary>
            Create a new instance of the <see cref="T:ComponentPro.Diagnostics.XTrace"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.Close">
            <summary>Flushes the output buffer, and then closes the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.Flush">
            <summary>Flushes the output buffer, and causes buffered data to be written to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.Indent">
            <summary>Increases the current <see cref="P:ComponentPro.Diagnostics.UltimateTraceListener.IndentLevel"></see> by one.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.Unindent">
            <summary>Decreases the current <see cref="P:ComponentPro.Diagnostics.UltimateTraceListener.IndentLevel"></see> by one.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(ComponentPro.Diagnostics.ITraceSource,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="eventType">The event type.</param>
            <param name="traceSource">The source object.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(ComponentPro.Diagnostics.ITraceSource[],ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="eventType">The event type.</param>
            <param name="traceSources">The source objects.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(ComponentPro.Diagnostics.ITraceSource,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Object[])">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="format">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="args">The argument.</param>
            <param name="eventType">The event type.</param>
            <param name="traceSource">The source object.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(ComponentPro.Diagnostics.XTrace,System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Object[])">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="format">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="args">The argument.</param>
            <param name="eventType">The event type.</param>
            <param name="traceSource">The source object.</param>
            <param name="manager">The trace listener manager.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(ComponentPro.Diagnostics.ITraceSource,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>Writes a category name and a message with additional data buffer to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="traceSource">The source object.</param>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">A message to write. </param>
            <param name="eventType">The event type.</param>
            <param name="buffer">The data buffer.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Object[])">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="format">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="args">The argument.</param>
            <param name="eventType">The event type.</param>
            <param name="source">The source object.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>Writes a category name and the value of the object's <see cref="M:System.Object.ToString"></see> method to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
            <param name="eventType">The event type.</param>
            <param name="source">The source object.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.WriteLine(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>Writes a category name and a message with additional data buffer to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">A message to write. </param>
            <param name="eventType">The event type.</param>
            <param name="source">The source object.</param>
            <param name="buffer">The data buffer.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.AutoFlush">
            <summary>Gets or sets whether <see cref="M:ComponentPro.Diagnostics.UltimateTraceListener.Flush"></see> should be called on the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> after every write. Default is <c>true</c>.</summary>
            <returns>true if <see cref="M:ComponentPro.Diagnostics.UltimateTraceListener.Flush"></see> is called on the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> after every write; otherwise, false.</returns>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.IndentLevel">
            <summary>Gets or sets the indent level.</summary>
            <returns>The indent level. The default is zero.</returns>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.IndentSize">
            <summary>Gets or sets the number of spaces in an indent.</summary>
            <returns>The number of spaces in an indent. The default is four.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.HasListeners">
            <summary>
            Gets a boolean value indicating whether at least one listener has been attached.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.Listeners">
            <summary>Gets the collection of listeners that is monitoring the trace output.</summary>
            <returns>A list of <see cref="T:ComponentPro.Diagnostics.UltimateTraceListener"></see> monitoring the trace output.</returns>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.Level">
            <summary>
            Gets or sets the trace level.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.XTrace.SourceFilters">
            <summary>
            Gets or sets the source object filter.
            </summary>
            <remarks>
            It is handy to add some filters to filter out all messages comming from unwanted sources.
            For example, in a build system, uploading files is just a child task of a main one. By adding a <see cref="T:ComponentPro.Diagnostics.TraceSourceFilter"/> object to this property, 
            you can show messages coming from the main task only.
            </remarks>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.ShouldLog(ComponentPro.Diagnostics.TraceEventType)">
            <summary>
            Indicates whether futher log message with severity lesser or equal to the specicifed <paramref name="level"/> should be logged.
            </summary>
            <param name="level">The log level.</param>
            <returns><c>true</c> to log; otherwise, false</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.ShouldLog(System.Object,ComponentPro.Diagnostics.TraceEventType)">
            <summary>
            Indicates whether futher log message from the given source with severity lesser or equal to the specicifed <paramref name="level"/> should be logged.
            </summary>
            <param name="level">The log level.</param>
            <param name="source">The log source to check.</param>
            <returns><c>true</c> to log; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.XTrace.ShouldLog(ComponentPro.Diagnostics.XTrace,ComponentPro.Diagnostics.TraceEventType)">
            <summary>
            Indicates whether futher log message from the given source with severity lesser or equal to the specicifed <paramref name="level"/> should be logged.
            </summary>
            <param name="level">The log level.</param>
            <param name="traceListenerManager">The trace listener manager.</param>
            <returns><c>true</c> to log; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:ComponentPro.Diagnostics.UltimateConsoleTraceListener">
            <summary>Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter"></see> or to a <see cref="T:System.IO.Stream"></see>, such as <see cref="T:System.IO.FileStream"></see>.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateConsoleTraceListener.TraceData(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:ComponentPro.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="category">A category name used to organize the output.</param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
        </member>
        <member name="T:ComponentPro.Diagnostics.UltimateOutputTraceListener">
            <summary>Directs tracing or debugging output to the .NET trace listeners.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateOutputTraceListener.TraceData(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:ComponentPro.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="category">A category name used to organize the output.</param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
        </member>
        <member name="T:ComponentPro.Diagnostics.ITraceSourceFilter">
            <summary>
            Defines the stadardized fillter for <see cref="T:ComponentPro.Diagnostics.UltimateTraceListener"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.ITraceSourceFilter.Matches(System.Object)">
            <summary>
            Returns true if the input source object is the one that we want to log messages; otherwise false.
            </summary>
            <param name="source">The source object.</param>
            <returns><c>true</c> to log; otherwise, <c>false</c></returns>
        </member>
        <member name="T:ComponentPro.Diagnostics.UltimateTraceListenerCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Diagnostics.UltimateTraceListener"/> objects.
            </summary>
            <remarks>
            This class is thread-safe.
            </remarks>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the list.
            </summary>
            <returns>A Enumerator for the list.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Add(ComponentPro.Diagnostics.UltimateTraceListener)">
            <summary>
            Adds an object to the end of the list.
            </summary>
            <param name="item">The object to be added to the end of the list. The value can be null for reference types.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Clear">
            <summary>
            Removes all elements from the list.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Contains(ComponentPro.Diagnostics.UltimateTraceListener)">
            <summary>
            Determines whether an element is in the list.
            </summary>
            <param name="item">The object to locate in the list. The value can be null for reference types.</param>
            <returns>true if item is found in the list; otherwise, false.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.CopyTo(ComponentPro.Diagnostics.UltimateTraceListener[],System.Int32)">
            <summary>
            Copies the entire list to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from the list. 
            The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Remove(ComponentPro.Diagnostics.UltimateTraceListener)">
            <summary>
            Removes the first occurrence of a specific object from the list.
            </summary>
            <param name="item">The object to remove from the list. The value can be null for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the list.</returns>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Count">
            <summary>
            Gets the number of elements actually contained in the list.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.IndexOf(ComponentPro.Diagnostics.UltimateTraceListener)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire list.
            </summary>
            <param name="item">The object to locate in the list. The value can be null for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire list, if found; otherwise, –1.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Insert(System.Int32,ComponentPro.Diagnostics.UltimateTraceListener)">
            <summary>
            Inserts an element into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListenerCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListenerCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="T:ComponentPro.Diagnostics.UltimateTraceListener">
            <summary>
            Defines the base Trace Listener.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.Dispose">
            <summary>
            Releases all the used resources.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.Flush">
            <summary>Flushes the output buffer, and causes buffered data to be written to the underlying stream.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.WriteIndent">
            <summary>
            Writes the indent to the listener you create when you implement this class,
            and resets the <see cref="P:ComponentPro.Diagnostics.UltimateTraceListener.NeedIndent"/> property to false.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.TraceData(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="source">An object to identify the source, typically the instance of the class that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:ComponentPro.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.TraceData(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>Writes a category name and a message with additional data buffer to the trace listeners in the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see> collection.</summary>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">A message to write. </param>
            <param name="eventType">The event type.</param>
            <param name="source">The source object.</param>
            <param name="buffer">The data buffer.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTraceListener.MatchesSource(System.Object,ComponentPro.Diagnostics.TraceEventType)">
            <summary>
            Indicates whether the given log information will be accepted by this listener.
            </summary>
            <param name="source">An object to identify the source, typically the instance of the class that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:ComponentPro.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <returns><c>true</c> to accept; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.SourceToListen">
            <summary>
            Gets or sets the source object to listen to.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.SourceFilter">
            <summary>
            Gets or sets the source object filter.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.IndentSize">
            <summary>
            Gets or sets the indent size.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.IndentLevel">
            <summary>
            Gets or sets the indent level.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.IsThreadSafe">
            <summary>
            Indicates whether the listener is thread-safe.
            </summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.Level">
            <summary>
            Gets or sets the trace level.
            </summary>
            <remarks>
            If you wish to set global trace level, set the <see cref="P:ComponentPro.Diagnostics.XTrace.Level"/> property.
            </remarks>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTraceListener.NeedIndent">
            <summary>
            Indicates whether it needs indent.
            </summary>
        </member>
        <member name="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener">
            <summary>Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter"></see> or to a <see cref="T:System.IO.Stream"></see>, such as <see cref="T:System.IO.FileStream"></see>.</summary>    
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with <see cref="T:System.IO.TextWriter"></see> as the output recipient.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the stream as the recipient of the debugging and tracing output.</summary>
            <param name="stream">A <see cref="T:System.IO.Stream"></see> that represents the stream the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> writes to. </param>
            <exception cref="T:System.ArgumentNullException">The stream is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"></see> that receives the output from the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see>. </param>
            <exception cref="T:System.ArgumentNullException">The writer is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the file as the recipient of the debugging and tracing output.</summary>
            <param name="fileName">The name of the file the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> writes to. </param>
            <exception cref="T:System.ArgumentNullException">The stream is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.Object)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with <see cref="T:System.IO.TextWriter"></see> as the output recipient.</summary>
            <param name="targetToListen">The source object to listen to.</param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.Object,System.IO.Stream)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the stream as the recipient of the debugging and tracing output.</summary>
            <param name="stream">A <see cref="T:System.IO.Stream"></see> that represents the stream the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> writes to. </param>
            <param name="targetToListen">The source object to listen to.</param>
            <exception cref="T:System.ArgumentNullException">The stream is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.Object,System.IO.TextWriter)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter"></see> that receives the output from the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see>. </param>
            <param name="targetToListen">The source object to listen to.</param>
            <exception cref="T:System.ArgumentNullException">The writer is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.#ctor(System.Object,System.String,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> class with the specified name, using the file as the recipient of the debugging and tracing output.</summary>
            <param name="fileName">The name of the file the <see cref="T:ComponentPro.Diagnostics.UltimateTextWriterTraceListener"></see> writes to. </param>
            <param name="targetToListen">The source object to listen to.</param>
            <param name="append">Indicates whether to append log entries to the end of the specified file.</param>
            <exception cref="T:System.ArgumentNullException">The stream is null. </exception>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Dispose">
            <summary>Closes the <see cref="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Writer"></see> so that it no longer receives tracing or debugging output.</summary>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.FileName">
            <summary>
            Gets or sets the log file name.
            </summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Flush">
            <summary>Flushes the output buffer for the <see cref="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Writer"></see>.</summary>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Write(System.String)">
            <summary>Writes a message to this instance's <see cref="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Writer"></see>.</summary>
            <param name="message">A message to write. </param>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.WriteLine(System.String)">
            <summary>Writes a message to this instance's <see cref="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Writer"></see> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\r\n).</summary>
            <param name="message">A message to write. </param>
        </member>
        <member name="P:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.Writer">
            <summary>Gets or sets the text writer that receives the tracing or debugging output.</summary>
            <returns>A <see cref="T:System.IO.TextWriter"></see> that represents the writer that receives the tracing or debugging output.</returns>
        </member>
        <member name="M:ComponentPro.Diagnostics.UltimateTextWriterTraceListener.TraceData(System.Object,ComponentPro.Diagnostics.TraceEventType,System.String,System.String)">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="source">An object to identify the source, typically the instance of the class that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:ComponentPro.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="category">A category name used to organize the output. </param>
            <param name="message">An <see cref="T:System.Object"></see> whose name is sent to the <see cref="P:ComponentPro.Diagnostics.XTrace.Listeners"></see>. </param>
        </member>
    </members>
</doc>
